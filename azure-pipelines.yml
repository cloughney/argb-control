# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  controlProject: 'src/argb-control/ARGBControl.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    restoreDirectory: '$(Build.Repository.LocalPath)\packages'

- task: DeleteFiles@1
  inputs:
    SourceFolder: $(Build.BinariesDirectory)

- task: PowerShell@2
  displayName: 'Setup Installer Variables'
  inputs:
    targetType: 'inline'
    script: |
      [XML]$csproj = get-content '$(controlProject)'
      
      foreach ($package in $csproj.Project.ItemGroup[0].PackageReference) {
        if ($package.Include -eq "Tools.InnoSetup") {
          ${Env:Installer.ToolVersion} = $package.Version
          break
        }
      }
      
      ${Env:Installer.AppVersion} = $csproj.Project.PropertyGroup.Version
      ${Env:Installer.PublishPath} = "$(Build.BinariesDirectory)"

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:OutDir=$(Build.BinariesDirectory)'

- task: CmdLine@2
  displayName: 'Create Installer'
  inputs:
    script: |
      iscc $(Build.Repository.LocalPath)\installer.iss
    workingDirectory: '$(Build.Repository.LocalPath)\packages\tools.innosetup\$(Installer.ToolVersion)\tools'

- task: PowerShell@2
  displayName: 'Create Manifest'
  inputs:
    targetType: 'inline'
    script: |
      set-content -path '$(Build.BinariesDirectory)\setup' -value @"
      {
        "latest": "$(Installer.AppVersion)"
      }
      "@

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.BinariesDirectory)\setup
    TargetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: drop